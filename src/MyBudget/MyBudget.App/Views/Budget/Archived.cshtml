@using ValueType = MyBudget.App.Domain.ValueType
@using Newtonsoft.Json
@model MyBudget.App.Queries.Budget.GetArchivedBudgetOperationsQueryResponse

@{
    ViewBag.Title = "Archiwum - "+ Model.Name;
    Layout = "_Layout";
}
<div class="section">
    <h2>Archiwum: @Model.Name, @Model.From.ToString("dd/MM/yyyy"), @Model.To.ToString("dd/MM/yyyy")</h2>
    @{
        foreach (var operation in Model.Operations)
        {
            <div class="element">
            <span>Nazwa: @operation.Name, Data: @operation.Date.ToString("dd/MM/yyyy"),
            @if (operation.ValueType.Equals(ValueType.Percent))
            {
                @:Wartość rzeczywista: @operation.RealValue.ToString("F") PLN, Wartość procentowa: @operation.Value, Typ wartości: %
            }
            else
            {
                @:Wartość: @operation.RealValue PLN, Typ wartości: stała
            }
            Kategoria: @operation.CategoryName</span>
            </div>
        }
    }


    <h3>Wynik: @Model.Total.ToString("F") PLN</h3>
    <h4>Statystyki</h4>
    <div id="chartContainer" style="height: 500px"></div>
    <div style="clear: both"></div>
    <script type="text/javascript">
    	window.onload = function () {
    		var chart = new CanvasJS.Chart("chartContainer", {
    			theme: "dark2",
    			animationEnabled: true,
    			title: {
    				text: "Przychód/wydatki pogrupowane po kategoriach"
    			},
    			data: [
    			{
    				type: "column",
    				
    				dataPoints: @Html.Raw(JsonConvert.SerializeObject(Model.Statistics.Statistics))
    			}
    			]
    		});
    		chart.render();
    	};
    </script>
    @Html.ActionLink("Powrót do strony głównej", "Index", "Home")
</div>